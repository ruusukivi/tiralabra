/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'jacoco-report-aggregation' 
    id 'checkstyle'
     id 'com.adarshr.test-logger' version '3.2.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'
    testImplementation 'junit:junit:4.13.2'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
            testlogger {
                theme 'standard'
                showExceptions true
                showStackTraces true
                showFullStackTraces false
                showCauses true
                slowThreshold 2000
                showSummary true
                showSimpleNames false
                showPassed true
                showSkipped true
                showFailed true
                showOnlySlow false
                showStandardStreams false
                showPassedStandardStreams true
                showSkippedStandardStreams true
                showFailedStandardStreams true
                logLevel 'lifecycle'
            }
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'tiralabra.Sovellus'
}


jar {
    manifest {
        attributes 'Main-Class': 'tiralabra.Sovellus'
    }
}

run {
    standardInput = System.in
    standardOutput = System.out
}

tasks.named('check') {
    dependsOn tasks.named('testCodeCoverageReport', JacocoReport) 
}

task myJavadocs(type: Javadoc) {
  source = sourceSets.main.allJava
}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
}
